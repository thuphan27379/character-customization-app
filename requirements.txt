Character Customization App

User Stories:
User sees a pre-selected avatar.
User sees lists of parts for body, clothing (3 layers), eyebrows, eyes, hair, and mouths. Note: Nose is pre-set as there is only one variation.
User can select a different part and the avatar will reflect the change when the user clicks on a different item.
App MUST be responsive.

Working with layers:
The avatar that we are going to make consists of several different layers:

On a web page, you can use the CSS property z-index (default 0) to represent the layer index. Note that you can only use this property with a positioned element (absolute, relative, fixed, sticky) or a flex child. The higher the number, the higher the layer. For example, an element with a z-index of 2 will sit on top of everything with a z-index of 1 or less.

Structure:
Images:
As you will work with a lot of images, let's put the image folder in /public so you can access the images dynamically based on our src url. images/body/1.png will give varation #1 for the body, and images/body/2.png will give varation #2.

As all the file names have conveniently been named with their index numbers already, you can dynamically link to the image you want with its associated index number (within a folder). This will be important later.

Components:

For the PartList, you will need to know the total number of the items in the list before you can map out all the selectable items of that list.

You can use this constant and pass the total number to each of the list.

const total = {
	body: 17,
	eyes: 17,
	hair: 73,
	mouth: 24,
	eyebrows: 15,
	hat: 28,
	glasses: 17,
	clothing1: 5,
	clothing2: 5,
	clothing3: 9,
};